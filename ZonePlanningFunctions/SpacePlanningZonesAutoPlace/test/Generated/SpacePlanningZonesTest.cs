
// This code was generated by Hypar.
// Edits to this code will be overwritten the next time you run 'hypar test generate'.
// DO NOT EDIT THIS FILE.

using Elements;
using Xunit;
using System.IO;
using System.Collections.Generic;
using Elements.Serialization.glTF;

namespace SpacePlanningZones
{
    public class SpacePlanningZonesTest
    {
        [Fact]
        public void TestExecute()
        {
            var input = GetInput();

            var modelDependencies = new Dictionary<string, Model> {
                {"Levels", Model.FromJson(File.ReadAllText(@"/Users/andrewheumann/Dev/HyparSpace/ZonePlanningFunctions/SpacePlanningZonesAutoPlace/test/Generated/SpacePlanningZonesTest/model_dependencies/Levels/model.json")) },
                {"Program Requirements", Model.FromJson(File.ReadAllText(@"/Users/andrewheumann/Dev/HyparSpace/ZonePlanningFunctions/SpacePlanningZonesAutoPlace/test/Generated/SpacePlanningZonesTest/model_dependencies/Program Requirements/model.json")) },
                {"Floors", Model.FromJson(File.ReadAllText(@"/Users/andrewheumann/Dev/HyparSpace/ZonePlanningFunctions/SpacePlanningZonesAutoPlace/test/Generated/SpacePlanningZonesTest/model_dependencies/Floors/model.json")) },
                {"Core", Model.FromJson(File.ReadAllText(@"/Users/andrewheumann/Dev/HyparSpace/ZonePlanningFunctions/SpacePlanningZonesAutoPlace/test/Generated/SpacePlanningZonesTest/model_dependencies/Core/model.json")) },
            };

            var result = SpacePlanningZones.Execute(modelDependencies, input);
            result.Model.ToGlTF("../../../Generated/SpacePlanningZonesTest/results/SpacePlanningZonesTest.glb");
            File.WriteAllText("../../../Generated/SpacePlanningZonesTest/results/SpacePlanningZonesTest.json", result.Model.ToJson());
        }

        public SpacePlanningZonesInputs GetInput()
        {
            var inputText = @"
            {
  ""Manual Split Locations"": [],
  ""overrides"": {
    ""Merge Zones"": [
      {
        ""identities"": [
          {
            ""ParentCentroid"": {
              ""X"": 29.52518,
              ""Y"": 13.759065,
              ""Z"": 0
            }
          },
          {
            ""ParentCentroid"": {
              ""X"": 31.007859999999997,
              ""Y"": 20.100323333333332,
              ""Z"": 0
            }
          }
        ],
        ""id"": ""101c2cd4-f518-4bc9-b8ea-ee09fec6cae6""
      }
    ]
  },
  ""Additional Corridor Locations"": [],
  ""Automatically Place Program"": true,
  ""Default Program Assignment"": ""Open Office"",
  ""Circulation Mode"": ""Automatic"",
  ""Add Corridors"": {
    ""SplitLocations"": [
      {
        ""position"": {
          ""X"": 21.46320620661802,
          ""Y"": 15.709143393859746,
          ""Z"": 0
        },
        ""direction"": {
          ""X"": 0,
          ""Y"": 1,
          ""Z"": 0
        }
      },
      {
        ""position"": {
          ""X"": 5.570626202704158,
          ""Y"": 17.71011583479078,
          ""Z"": 0
        },
        ""direction"": {
          ""X"": 1,
          ""Y"": 0,
          ""Z"": 0
        }
      },
      {
        ""position"": {
          ""X"": 4.371203013517423,
          ""Y"": 22.744352951614296,
          ""Z"": 0
        },
        ""direction"": {
          ""X"": -1,
          ""Y"": 0,
          ""Z"": 0
        }
      },
      {
        ""position"": {
          ""X"": 30.337950846839163,
          ""Y"": 26.968614831379895,
          ""Z"": 0
        },
        ""direction"": {
          ""X"": 0,
          ""Y"": -1,
          ""Z"": 0
        }
      },
      {
        ""position"": {
          ""X"": 30.875107285697876,
          ""Y"": 41.748860073234,
          ""Z"": 0
        },
        ""direction"": {
          ""X"": 3.190818968446706E-15,
          ""Y"": -1,
          ""Z"": 0
        }
      }
    ]
  },
  ""Depth at Ends"": 8,
  ""Split Zones"": {
    ""SplitLocations"": [
      {
        ""position"": {
          ""X"": 33.94056069076703,
          ""Y"": 17.62039745976522,
          ""Z"": 0
        },
        ""direction"": {
          ""X"": 0,
          ""Y"": 1,
          ""Z"": 0
        }
      }
    ]
  },
  ""Corridors"": [
    {
      ""width"": 1.5,
      ""flip"": false,
      ""polyline"": {
        ""Vertices"": [
          {
            ""X"": -10.455778532593294,
            ""Y"": 33.26173194251658,
            ""Z"": 0
          },
          {
            ""X"": -17.933014337764224,
            ""Y"": 33.26173194251658,
            ""Z"": 0
          },
          {
            ""X"": -17.806636666666666,
            ""Y"": 18.935760836919517,
            ""Z"": 0
          },
          {
            ""X"": -10.455778532593294,
            ""Y"": 19.000607005092355,
            ""Z"": 0
          },
          {
            ""X"": -10.449406356201136,
            ""Y"": 33.31511610387172,
            ""Z"": 0
          }
        ],
        ""discriminator"": ""Elements.Geometry.Polyline""
      },
      ""rightWidth"": 1.5
    }
  ],
  ""Corridor Width"": 1.5,
  ""Outer Band Depth"": 8.02,
  ""model_input_keys"": {
    ""Levels"": ""efb4a51c-b972-4139-8bd6-144020a22d8d_61dbb9f8-aaae-4295-9112-c8ae81655361_elements.zip"",
    ""Program Requirements"": ""680925ee-38bf-484f-9478-a87086e121ee_ac2d042f-ede8-4f11-9d6e-ae3ffe849e81_elements.zip"",
    ""Floors"": ""9bc9e634-cbf2-4fb0-bff8-8720386c02d9_6a8c567d-6a2e-4402-a713-7474170bd302_elements.zip"",
    ""Core"": ""9bc9e634-cbf2-4fb0-bff8-8720386c02d9_6a8c567d-6a2e-4402-a713-7474170bd302_elements.zip""
  }
}
            ";
            return Newtonsoft.Json.JsonConvert.DeserializeObject<SpacePlanningZonesInputs>(inputText);
        }
    }
}