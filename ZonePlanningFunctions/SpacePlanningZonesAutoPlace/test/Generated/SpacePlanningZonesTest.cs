
// This code was generated by Hypar.
// Edits to this code will be overwritten the next time you run 'hypar test generate'.
// DO NOT EDIT THIS FILE.

using Elements;
using Xunit;
using System.IO;
using System.Collections.Generic;
using Elements.Serialization.glTF;

namespace SpacePlanningZones
{
    public class SpacePlanningZonesTest
    {
        [Fact]
        public void TestExecute()
        {
            var input = GetInput();

            var modelDependencies = new Dictionary<string, Model> {
                {"Levels", Model.FromJson(File.ReadAllText(@"/Users/andrewheumann/Dev/HyparSpace/ZonePlanningFunctions/SpacePlanningZonesAutoPlace/test/Generated/SpacePlanningZonesTest/model_dependencies/Levels/model.json")) },
                {"Program Requirements", Model.FromJson(File.ReadAllText(@"/Users/andrewheumann/Dev/HyparSpace/ZonePlanningFunctions/SpacePlanningZonesAutoPlace/test/Generated/SpacePlanningZonesTest/model_dependencies/Program Requirements/model.json")) },
                {"Floors", Model.FromJson(File.ReadAllText(@"/Users/andrewheumann/Dev/HyparSpace/ZonePlanningFunctions/SpacePlanningZonesAutoPlace/test/Generated/SpacePlanningZonesTest/model_dependencies/Floors/model.json")) },
                {"Core", Model.FromJson(File.ReadAllText(@"/Users/andrewheumann/Dev/HyparSpace/ZonePlanningFunctions/SpacePlanningZonesAutoPlace/test/Generated/SpacePlanningZonesTest/model_dependencies/Core/model.json")) },
            };

            var result = SpacePlanningZones.Execute(modelDependencies, input);
            result.Model.ToGlTF("../../../Generated/SpacePlanningZonesTest/results/SpacePlanningZonesTest.glb");
            File.WriteAllText("../../../Generated/SpacePlanningZonesTest/results/SpacePlanningZonesTest.json", result.Model.ToJson());
        }

        public SpacePlanningZonesInputs GetInput()
        {
            var inputText = @"
            {
  ""Default Program Assignment"": ""Open Office"",
  ""Circulation Mode"": ""Automatic"",
  ""Add Corridors"": {
    ""SplitLocations"": [
      {
        ""position"": {
          ""X"": 40.267189097100996,
          ""Y"": -69.14833122649492,
          ""Z"": 0
        },
        ""direction"": {
          ""X"": 0,
          ""Y"": 0.9999999999999999,
          ""Z"": 0
        }
      },
      {
        ""position"": {
          ""X"": 32.105811176637644,
          ""Y"": -69.11149547465685,
          ""Z"": 0
        },
        ""direction"": {
          ""X"": -0.9999999999999999,
          ""Y"": 0,
          ""Z"": 0
        }
      }
    ]
  },
  ""Depth at Ends"": 4.876799843942405,
  ""Split Zones"": {
    ""SplitLocations"": [
      {
        ""position"": {
          ""X"": 65.19262472187121,
          ""Y"": -62.77859206200863,
          ""Z"": 0
        },
        ""direction"": {
          ""X"": 0,
          ""Y"": 1,
          ""Z"": 0
        }
      },
      {
        ""position"": {
          ""X"": 38.60439032715381,
          ""Y"": -62.825871179247535,
          ""Z"": 0
        },
        ""direction"": {
          ""X"": 0,
          ""Y"": 0.9999999999999999,
          ""Z"": 0
        }
      }
    ]
  },
  ""Corridors"": [],
  ""Corridor Width"": 1.5,
  ""Outer Band Depth"": 6.095999804928006,
  ""Manual Split Locations"": [],
  ""model_input_keys"": {
    ""Levels"": ""d4a882e5-bc73-49f7-9d54-3b3ca6d84567_61dbb9f8-aaae-4295-9112-c8ae81655361_elements.zip"",
    ""Program Requirements"": ""a7323c20-6d0e-4d7b-9272-73d208f6c127_9448d3bc-c7a0-4cee-9757-4752b8ba9958_elements.zip"",
    ""Floors"": ""6bdfc2fb-2a36-4edd-b9e0-e959b3421a67_31ec3b95-5062-47b9-a1e0-e3550bf7e2d1_elements.zip"",
    ""Core"": ""cc4c614b-5b9d-4b61-b32a-c3497e03ccee_a9cac5a1-f68d-4d2e-bfdd-0d204359bbe4_elements.zip""
  },
  ""overrides"": {
    ""Program Assignments"": [
      {
        ""value"": {
          ""Split"": 1,
          ""Id"": ""18a421d4-42da-45da-8c12-895f8da21b11"",
          ""Program Type"": ""Private Office""
        },
        ""identity"": {
          ""ParentCentroid"": {
            ""X"": 54.65555500000001,
            ""Y"": -68.9097,
            ""Z"": 0.3
          },
          ""IndividualCentroid"": {
            ""X"": 54.65555500000001,
            ""Y"": -68.9097,
            ""Z"": 0.3
          },
          ""AlignmentEdge"": {
            ""Start"": {
              ""X"": 62.197917050314146,
              ""Y"": -65.8617,
              ""Z"": 0
            },
            ""End"": {
              ""X"": 59.14991557547122,
              ""Y"": -68.90970147484292,
              ""Z"": 0
            },
            ""discriminator"": ""Elements.Geometry.Line""
          },
          ""AutoPlaced"": true
        },
        ""id"": ""4d7469a0-bd15-4a35-8906-0ce432ccae61""
      }
    ]
  },
  ""Additional Corridor Locations"": []
}
            ";
            return Newtonsoft.Json.JsonConvert.DeserializeObject<SpacePlanningZonesInputs>(inputText);
        }
    }
}