
// This code was generated by Hypar.
// Edits to this code will be overwritten the next time you run 'hypar test generate'.
// DO NOT EDIT THIS FILE.

using Elements;
using Xunit;
using System;
using System.IO;
using System.Collections.Generic;
using Elements.Serialization.glTF;

namespace Circulation
{
    public class CirculationTest
    {
        [Fact]
        public void TestExecute()
        {
            var input = GetInput();

            var modelDependencies = new Dictionary<string, Model> { 
                {"Levels", Model.FromJson(File.ReadAllText(@"/Users/andrewheumann/Dev/HyparSpace/ZonePlanningFunctions/Circulation/test/Generated/CirculationTest/model_dependencies/Levels/28771479-433e-404f-b9af-c67d2d049833.json")) }, 
                {"Core", Model.FromJson(File.ReadAllText(@"/Users/andrewheumann/Dev/HyparSpace/ZonePlanningFunctions/Circulation/test/Generated/CirculationTest/model_dependencies/Core/9f211330-d9bf-4f56-bd00-8f0920c762d8.json")) }, 
                {"Floors", Model.FromJson(File.ReadAllText(@"/Users/andrewheumann/Dev/HyparSpace/ZonePlanningFunctions/Circulation/test/Generated/CirculationTest/model_dependencies/Floors/c471b765-baf5-4314-821c-945c001e63ba.json")) }, 
                {"Program Requirements", Model.FromJson(File.ReadAllText(@"/Users/andrewheumann/Dev/HyparSpace/ZonePlanningFunctions/Circulation/test/Generated/CirculationTest/model_dependencies/Program Requirements/126ff98d-ef85-4360-b8b1-42ca9f7b71e1.json")) }, 
            };

            var result = Circulation.Execute(modelDependencies, input);
            result.Model.ToGlTF("../../../Generated/CirculationTest/results/CirculationTest.gltf", false);
            result.Model.ToGlTF("../../../Generated/CirculationTest/results/CirculationTest.glb");
            File.WriteAllText("../../../Generated/CirculationTest/results/CirculationTest.json", result.Model.ToJson());

        }

        public CirculationInputs GetInput()
        {
            var json = File.ReadAllText("../../../Generated/CirculationTest/inputs.json");
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CirculationInputs>(json);
        }
    }
}