
// This code was generated by Hypar.
// Edits to this code will be overwritten the next time you run 'hypar test generate'.
// DO NOT EDIT THIS FILE.

using Elements;
using Xunit;
using System.IO;
using System.Collections.Generic;
using Elements.Serialization.glTF;

namespace DefineProgramRequirements
{
    public class DefineProgramRequirementsTest
    {
        [Fact]
        public void TestExecute()
        {
            var input = GetInput();

            var modelDependencies = new Dictionary<string, Model>
            {
            };

            var result = DefineProgramRequirements.Execute(modelDependencies, input);
            result.Model.ToGlTF("../../../Generated/DefineProgramRequirementsTest/results/DefineProgramRequirementsTest.glb");
            File.WriteAllText("../../../Generated/DefineProgramRequirementsTest/results/DefineProgramRequirementsTest.json", result.Model.ToJson());
        }

        public DefineProgramRequirementsInputs GetInput()
        {
            var inputText = @"
            {
  ""Program Requirements"": [
    {
      ""Program Name"": ""Open Office"",
      ""Area per Space"": 1300,
      ""Space Count"": 1,
      ""Hypar Space Type"": ""Open Office"",
      ""Color"": {
        ""Red"": 0.8196078431372549,
        ""Alpha"": 1,
        ""Blue"": 1,
        ""Green"": 0.8196078431372549
      }
    },
    {
      ""Program Name"": ""Private Office"",
      ""Area per Space"": 30,
      ""Space Count"": 6,
      ""Hypar Space Type"": ""Private Office"",
      ""Color"": {
        ""Red"": 0,
        ""Alpha"": 1,
        ""Blue"": 0.5450980392156862,
        ""Green"": 0
      }
    },
    {
      ""Program Name"": ""Circulation"",
      ""Area per Space"": 0,
      ""Space Count"": 1,
      ""Hypar Space Type"": ""Circulation"",
      ""Color"": {
        ""Red"": 1,
        ""Alpha"": 1,
        ""Blue"": 0.803921568627451,
        ""Green"": 0.9803921568627451
      }
    },
    {
      ""Program Name"": ""Meeting Room"",
      ""Area per Space"": 30,
      ""Space Count"": 6,
      ""Hypar Space Type"": ""Meeting Room"",
      ""Color"": {
        ""Red"": 0.5647058823529412,
        ""Alpha"": 1,
        ""Blue"": 0.5647058823529412,
        ""Green"": 0.9333333333333333
      }
    },
    {
      ""Program Name"": ""Lounge"",
      ""Area per Space"": 140,
      ""Space Count"": 1,
      ""Hypar Space Type"": ""Lounge"",
      ""Color"": {
        ""Red"": 1,
        ""Alpha"": 1,
        ""Blue"": 0.7568627450980392,
        ""Green"": 0.7137254901960784
      }
    },
    {
      ""Program Name"": ""Classroom"",
      ""Area per Space"": 100,
      ""Space Count"": 1,
      ""Hypar Space Type"": ""Classroom"",
      ""Color"": {
        ""Red"": 1,
        ""Alpha"": 1,
        ""Blue"": 0,
        ""Green"": 0.6470588235294118
      }
    },
    {
      ""Program Name"": ""Pantry"",
      ""Area per Space"": 140,
      ""Space Count"": 1,
      ""Hypar Space Type"": ""Pantry"",
      ""Color"": {
        ""Red"": 1,
        ""Alpha"": 1,
        ""Blue"": 0.3137254901960784,
        ""Green"": 0.4980392156862745
      }
    },
    {
      ""Program Name"": ""Phone Booth"",
      ""Area per Space"": 30,
      ""Space Count"": 2,
      ""Hypar Space Type"": ""Phone Booth"",
      ""Color"": {
        ""Red"": 1,
        ""Alpha"": 1,
        ""Blue"": 0,
        ""Green"": 0.8431372549019608
      }
    },
    {
      ""Program Name"": ""Reception"",
      ""Area per Space"": 50,
      ""Space Count"": 1,
      ""Hypar Space Type"": ""Reception"",
      ""Color"": {
        ""Red"": 0.9568627450980393,
        ""Alpha"": 1,
        ""Blue"": 0.2627450980392157,
        ""Green"": 0.2627450980392157
      }
    },
    {
      ""Program Name"": ""Open Collaboration"",
      ""Area per Space"": 40,
      ""Space Count"": 6,
      ""Hypar Space Type"": ""Open Collaboration"",
      ""Color"": {
        ""Red"": 0.3803921568627451,
        ""Alpha"": 1,
        ""Blue"": 0.3568627450980392,
        ""Green"": 0.7019607843137254
      }
    }
  ],
  ""model_input_keys"": {}
}
            ";
            return Newtonsoft.Json.JsonConvert.DeserializeObject<DefineProgramRequirementsInputs>(inputText);
        }
    }
}