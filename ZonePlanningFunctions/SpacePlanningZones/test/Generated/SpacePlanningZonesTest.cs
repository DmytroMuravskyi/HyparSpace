
// This code was generated by Hypar.
// Edits to this code will be overwritten the next time you run 'hypar test generate'.
// DO NOT EDIT THIS FILE.

using Elements;
using Xunit;
using System.IO;
using System.Collections.Generic;
using Elements.Serialization.glTF;

namespace SpacePlanningZones
{
    public class SpacePlanningZonesTest
    {
        [Fact]
        public void TestExecute()
        {
            var input = GetInput();

            var modelDependencies = new Dictionary<string, Model> { 
                {"Levels", Model.FromJson(File.ReadAllText(@"/Users/andrewheumann/Dev/HyparSpace/ZonePlanningFunctions/SpacePlanningZones/test/Generated/SpacePlanningZonesTest/model_dependencies/Levels/model.json")) }, 
                {"Floors", Model.FromJson(File.ReadAllText(@"/Users/andrewheumann/Dev/HyparSpace/ZonePlanningFunctions/SpacePlanningZones/test/Generated/SpacePlanningZonesTest/model_dependencies/Floors/model.json")) }, 
                {"Core", Model.FromJson(File.ReadAllText(@"/Users/andrewheumann/Dev/HyparSpace/ZonePlanningFunctions/SpacePlanningZones/test/Generated/SpacePlanningZonesTest/model_dependencies/Core/model.json")) }, 
            };

            var result = SpacePlanningZones.Execute(modelDependencies, input);
            result.Model.ToGlTF("../../../Generated/SpacePlanningZonesTest/results/SpacePlanningZonesTest.gltf", false);
            result.Model.ToGlTF("../../../Generated/SpacePlanningZonesTest/results/SpacePlanningZonesTest.glb");
            File.WriteAllText("../../../Generated/SpacePlanningZonesTest/results/SpacePlanningZonesTest.json", result.Model.ToJson());
        }

        public SpacePlanningZonesInputs GetInput()
        {
            var inputText = @"
            {
  ""Default Program Assignment"": ""unspecified"",
  ""Circulation Mode"": ""Automatic"",
  ""Add Corridors"": {
    ""SplitLocations"": []
  },
  ""Depth at Ends"": 8,
  ""Split Zones"": {
    ""SplitLocations"": []
  },
  ""Corridors"": [],
  ""Corridor Width"": 1.5,
  ""Outer Band Depth"": 6,
  ""Manual Split Locations"": [],
  ""model_input_keys"": {
    ""Levels"": ""c05b4e94-90f9-4a85-b4c9-2c8b2ee79287_61dbb9f8-aaae-4295-9112-c8ae81655361_elements.zip"",
    ""Floors"": ""a9bc5c48-5f38-4a23-8d1f-6144e6008b55_6b2fa817-e74f-42af-abae-28b80745f699_elements.zip"",
    ""Core"": ""a9bc5c48-5f38-4a23-8d1f-6144e6008b55_6b2fa817-e74f-42af-abae-28b80745f699_elements.zip""
  },
  ""Additional Corridor Locations"": []
}
            ";
            return Newtonsoft.Json.JsonConvert.DeserializeObject<SpacePlanningZonesInputs>(inputText);
        }
    }
}